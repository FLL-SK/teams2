# import * from "./shared/scalars.graphql"
# import * from "./shared/types.graphql"

# import * from "./user.graphql"
# import * from "./event.graphql"

type Team implements INode {
  id: ID!
  name: String!
  coachesIds: [ID!]!

  address: Address!
  billTo: Address
  shipTo: Address
  useBillTo: Boolean

  deletedOn: DateTime
  deletedBy: ID

  coaches: [User!]!
  events: [EventTeam!]!
}

input CreateTeamInput {
  name: String!
  orgName: String!
  street: String!
  city: String!
  zip: String!
  countryCode: String
  contactName: String!
  phone: String!
  email: String!
}

type CreateTeamPayload implements IMutationPayload {
  team: Team
  errors: [ValidationError!]
}

input UpdateTeamInput {
  name: String
  address: AddressInput
  billTo: AddressInput
  shipTo: AddressInput
  useBillTo: Boolean
}

type UpdateTeamPayload implements IMutationPayload {
  team: Team
  errors: [ValidationError!]
}

input TeamFilterInput {
  isActive: Boolean
}

extend type Query {
  getTeam(id: ID!): Team!
  getTeams(filter: TeamFilterInput): [Team!]!
}

extend type Mutation {
  createTeam(input: CreateTeamInput!): CreateTeamPayload!
  updateTeam(id: ID!, input: UpdateTeamInput!): UpdateTeamPayload!
  deleteTeam(id: ID!): Team

  addCoachToTeam(teamId: ID!, userId: ID!): Team!
  removeCoachFromTeam(teamId: ID!, userId: ID!): Team!
}
